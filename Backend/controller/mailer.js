import nodemailer from "nodemailer";
import Mailgen from "mailgen";
import dotenv from "dotenv";
dotenv.config();

const nodeConfig = {
    //host: "smtp.gmail.com", // This is for testing, change it for production (like Gmail SMTP)
    service: 'gmail',
    port: 587,
    secure: false, // False for non-secure connections
    auth: {
        user: process.env.EMAIL, // Make sure this environment variable is set
        pass: process.env.PASSWORD, // Make sure this environment variable is set
    },
};

const transporter = nodemailer.createTransport(nodeConfig);

const MailGenerator = new Mailgen({
    theme: "default",
    product: {
        name: "Mailgen",
        link: "https://mailgen.js/",
    },
});

export const registerMail = async (req, res) => {
    const { email, text, subject } = req.body;
   
    // Ensure 'name' is not set to the email. This can be a placeholder or username.
    const emailBody = {
        body: {
            name: "User", // Can be dynamically set, for example, from a user DB
            intro: text || "Welcome to Iconique! We're very excited to have you on board.",
            outro: "Need help or have questions? Just reply to this mail, we'd love to help.",
        },
    };

    // Generate the HTML email body
    const emailContent = MailGenerator.generate(emailBody);
console.log("Con",emailContent)
    const message = {
        from: process.env.EMAIL, // Sender's email (your configured email)
        to: email, // Recipient email
        subject: subject || "Password Recovery OTP", // If no subject, default to OTP subject
        html: emailContent, // The HTML email content generated by Mailgen
    };

    try {
        // Send the email
        await transporter.sendMail(message);
        
    } catch (error) {
        console.error("Error sending mail:", error.message);
  
    }
};
